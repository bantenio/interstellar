import java.nio.file.Files
import java.nio.file.Paths

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://maven.aliyun.com/repository/public')
    }
}

ext {
    project_name = "${project.name.replace('interstellar-', '')}"
}

group = "org.tenio.${project_root_name}"
version = "${version}"
java.sourceCompatibility = JavaVersion.VERSION_17

java {
    withSourcesJar()
}

description = "${project_root_name}-${project_name}"

jar {
    baseName "${project_root_name}-${project_name}"
}

def localProperties = new Properties()
if (Files.exists(Paths.get("$project.rootDir/maven_cert.properties"))) {
    localProperties.load(new FileInputStream("$project.rootDir/maven_cert.properties"))
    localProperties.each { prop -> project.ext.set(prop.key, prop.value) }
} else {
    localProperties.setProperty("zz_maven_repository_username", "nothing")
    localProperties.setProperty("zz_maven_repository_password", "nothing")
}

ext {
    zz_maven_repository_username = localProperties.getProperty("zz_maven_repository_username")
    zz_maven_repository_password = localProperties.getProperty("zz_maven_repository_password")
}

publishing {
    repositories {
        maven {
            allowInsecureProtocol = true
            name "zzMaven"
            url = version.endsWith('SNAPSHOT') ? "${zzMavenSnapshotsUrl}" : "${zzMavenReleaseUrl}"

            credentials {
                username "${zz_maven_repository_username}"
                password "${zz_maven_repository_password}"
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
            groupId = "${project_group}"
            artifactId = "${project_root_name}-${project_name}"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
